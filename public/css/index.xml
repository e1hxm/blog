<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Css on El&#39;ham</title>
    <link>http://localhost:1313/css/</link>
    <description>Recent content in Css on El&#39;ham</description>
    <generator>Hugo</generator>
    <language>ru</language>
    <lastBuildDate>Thu, 26 Dec 2024 18:53:24 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Микросетки в Grid</title>
      <link>http://localhost:1313/grid_microsetki/</link>
      <pubDate>Thu, 26 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/grid_microsetki/</guid>
      <description>&lt;h3 id=&#34;repeat&#34;&gt;repeat&lt;/h3&gt;&#xA;&lt;p&gt;Если все колонки в грид-контейнере должны быть одинаковой ширины, удобно использовать функцию &lt;code&gt;repeat&lt;/code&gt;. В скобках после &lt;code&gt;repeat&lt;/code&gt; указывают количество колонок и их ширину, разделяя значения запятой. Например:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;количество&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;колонок&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;ширина&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;колонки&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Это создаст три колонки одинаковой ширины, где &lt;code&gt;1fr&lt;/code&gt; означает, что каждая колонка займет равную долю доступного пространства.&lt;/p&gt;&#xA;&lt;h3 id=&#34;auto-fit&#34;&gt;auto-fit&lt;/h3&gt;&#xA;&lt;p&gt;Если количество колонок должно автоматически подстраиваться под ширину контейнера, используют значение &lt;code&gt;auto-fit&lt;/code&gt;. Его указывают в функции &lt;code&gt;repeat&lt;/code&gt; вместо фиксированного числа колонок. Например:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;auto-fit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;minmax&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;200px&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;1fr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;));&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;В этом случае браузер автоматически создаст столько колонок, сколько поместится в контейнер, при этом каждая колонка будет иметь минимальную ширину &lt;code&gt;200px&lt;/code&gt; и равномерно распределит оставшееся пространство (&lt;code&gt;1fr&lt;/code&gt;). Это особенно полезно для создания адаптивных макетов.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Применение автоматических отступов flexbox</title>
      <link>http://localhost:1313/base_weight_flexbox3/</link>
      <pubDate>Wed, 25 Dec 2024 01:40:24 +0300</pubDate>
      <guid>http://localhost:1313/base_weight_flexbox3/</guid>
      <description>&lt;p&gt;Алгоритм расчёта размеров флекс-элементов и их распределения внутри флекс-контейнера включает три последовательных этапа. Этот процесс значительно сложнее, чем в традиционной блочной модели.&lt;/p&gt;&#xA;&lt;h3 id=&#34;шаг-третий---применение-автоматических-отступов&#34;&gt;Шаг третий - Применение автоматических отступов&lt;/h3&gt;&#xA;&lt;p&gt;Если во флекс-контейнере остаётся свободное место, то автоматически применяются отступы с помощью свойства &lt;code&gt;margin&lt;/code&gt;, установленного в значение &lt;code&gt;auto&lt;/code&gt; для флекс-элементов.&lt;/p&gt;&#xA;&lt;p&gt;Во флексбоксе автоматические отступы &lt;code&gt;margin: auto&lt;/code&gt; функционируют значительно эффективнее, чем в стандартной блочной модели. Во-первых, они применяются во всех направлениях, в отличие от блочной модели, где они работают только по горизонтали. Во-вторых, автоматические отступы могут взаимодействовать между собой: если на одной оси присутствует несколько таких отступов (у разных элементов или с разных сторон одного элемента), то свободное пространство распределяется между ними равномерно.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Приминение гибких размеров flexbox</title>
      <link>http://localhost:1313/base_weight_flexbox2/</link>
      <pubDate>Wed, 25 Dec 2024 01:29:24 +0300</pubDate>
      <guid>http://localhost:1313/base_weight_flexbox2/</guid>
      <description>&lt;p&gt;Алгоритм расчёта размеров флекс-элементов и их распределения внутри флекс-контейнера включает три последовательных этапа. Этот процесс значительно сложнее, чем в традиционной блочной модели.&lt;/p&gt;&#xA;&lt;h3 id=&#34;шаг-второй---применение-гибких-размеров&#34;&gt;Шаг второй - Применение гибких размеров&lt;/h3&gt;&#xA;&lt;p&gt;Начнём с примера. Ширина флекс-контейнера составляет 500px. Внутри него находятся три флекс-элемента, каждый из которых имеет исходный базовый размер 100px. Отступы &lt;code&gt;padding&lt;/code&gt; отсутствуют. Таким образом, во флекс-контейнере остаётся 500px - 300px = 200px свободного места.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/base_weight_flex2.png&#34; alt=&#34;Применение гибких размеров&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;В стандартной блочной модели эти 200px остались бы неиспользованными, так как размеры элементов определяются за один проход. Во флексбоксе же размеры элементов пересчитываются несколько раз. На втором этапе происходит перераспределение свободного пространства, но только для «гибких» элементов. При этом «гибкость» может быть двух типов: на растяжение и на сжатие.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Исходные базовые размеры flex-элементов</title>
      <link>http://localhost:1313/base_weight_flexbox/</link>
      <pubDate>Tue, 24 Dec 2024 06:29:24 +0300</pubDate>
      <guid>http://localhost:1313/base_weight_flexbox/</guid>
      <description>&lt;p&gt;Алгоритм расчёта размеров флекс-элементов и их распределения внутри флекс-контейнера включает три последовательных этапа. Этот процесс значительно сложнее, чем в традиционной блочной модели.&lt;/p&gt;&#xA;&lt;h3 id=&#34;первый-шаг---определение-исходных-базовых-размеров-флекс-элементов&#34;&gt;Первый шаг - Определение исходных базовых размеров флекс-элементов&lt;/h3&gt;&#xA;&lt;p&gt;Базовый размер — это размер элемента, измеряемый вдоль основной оси.&lt;/p&gt;&#xA;&lt;p&gt;Исходный базовый размер — это размер, который флекс-элемент принимает без использования дополнительных функций флекс-модели. Он определяется стандартными свойствами блочной модели (например, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;) и содержимым элемента.&lt;/p&gt;&#xA;&lt;p&gt;Если основная ось расположена горизонтально, то на исходный базовый размер влияют:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство Display в CSS</title>
      <link>http://localhost:1313/svoistvo_display_v_css/</link>
      <pubDate>Sat, 14 Dec 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/svoistvo_display_v_css/</guid>
      <description>&lt;p&gt;К каждому HTML элементу на странице соответствует прямоугольная область.&#xA;Такие области называют боксами.&lt;/p&gt;&#xA;&lt;p&gt;По умолчанию все HTML элементы обладают определенными боксами.&#xA;Но стандартное отображение элементов бокса всегда можно&#xA;поменять с помощью CSS-свойства Display.&lt;/p&gt;&#xA;&lt;p&gt;Тип отображения сразу влияет на две вещи в потоке документа:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 На расположение самого бокса.&lt;/li&gt;&#xA;&lt;li&gt;2 На расположение дочерних элементов внутри бокса.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;К примеру у элемента &lt;code&gt;li&lt;/code&gt; тип отображения по умолчанию&#xA;&lt;code&gt;display: block&lt;/code&gt; Это означает что элементы списка отображаются один под другим на странице.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Сетки страниц и поток документа</title>
      <link>http://localhost:1313/setki_stranits/</link>
      <pubDate>Wed, 27 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/setki_stranits/</guid>
      <description>&lt;p&gt;Лекция в HTML Academy про сетки страниц&lt;/p&gt;&#xA;&lt;p&gt;Сеткой или раскладкой обычно обозначают структуру взаимного расположения крупных&#xA;визуальных блоков на странице.&lt;/p&gt;&#xA;&lt;p&gt;Представим, что макет мысленно разбивается на не пересекающиеся прямоугольники.&lt;/p&gt;&#xA;&lt;p&gt;Сначала выделяются самые большие области, затем эти области делятся на более мелкие, и&#xA;так далее, пока не будут выделены самые маленькие прямоугольники, которые обозначают&#xA;отдельные слова или элементы.&lt;/p&gt;&#xA;&lt;p&gt;В итоге вся страница будет выглядеть как набор вложенных друг в друга прямоугольников,&#xA;начиная от самых крупных и заканчивая самыми мелкими.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство align-content</title>
      <link>http://localhost:1313/align_content_css/</link>
      <pubDate>Sat, 23 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/align_content_css/</guid>
      <description>&lt;p&gt;Лекция в HTML Academy про align-content&lt;/p&gt;&#xA;&lt;p&gt;Свойство &lt;code class=&#34;code_line&#34;&gt;justify-content&lt;/code&gt; управляет распределением флекс-элементов вдоль главной оси,&#xA;а &lt;code class=&#34;code_line&#34;&gt;align-content&lt;/code&gt; — выравниванием рядов флекс-элементов вдоль поперечной оси. Оба&#xA;свойства имеют схожие значения:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;1 &lt;code class=&#34;code_line&#34;&gt;flex-start&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;2 &lt;code class=&#34;code_line&#34;&gt;flex-end&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;3 &lt;code class=&#34;code_line&#34;&gt;center&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;4 &lt;code class=&#34;code_line&#34;&gt;space-between&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;5 &lt;code class=&#34;code_line&#34;&gt;stretch&lt;/code&gt; - доступно только для &lt;code class=&#34;code_line&#34;&gt;align-content&lt;/code&gt; и является значением по умолчанию.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Свойство &lt;code class=&#34;code_line&#34;&gt;align-content&lt;/code&gt; переопределяет значение &lt;code class=&#34;code_line&#34;&gt;align-items&lt;/code&gt;, которое управляет&#xA;выравниванием отдельных флекс-элементов вдоль поперечной оси. Это происходит как для&#xA;одного ряда флекс-элементов, так и для нескольких рядов.&lt;/p&gt;&#xA;&lt;p&gt;Однако есть один нюанс: &lt;code class=&#34;code_line&#34;&gt;align-content&lt;/code&gt; перестаёт работать, если для флекс-контейнера&#xA;установлено свойство &lt;code class=&#34;coe_line&#34;&gt;flex-wrap: nowrap&lt;/code&gt;. Это происходит потому, что в таком случае&#xA;высота строки равна высоте флекс-контейнера, и на поперечной оси не остаётся&#xA;свободного пространства.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство justify-content</title>
      <link>http://localhost:1313/svoistvo_justify_content/</link>
      <pubDate>Thu, 21 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/svoistvo_justify_content/</guid>
      <description>&lt;p&gt;&#xA;                            Лекция от HTMLAcademy про justify-content&#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            В Flexbox есть свойства justify-content,&#xA;                            которые позволяют равномерно&#xA;                            распределять элементы вдоль главной оси:&#xA;                        &lt;/p&gt;&#xA;                        &lt;ul&gt;&#xA;                            &lt;li&gt;&#xA;                                &#39;space-between&#39; — это значение,&#xA;                                при котором расстояния между&#xA;                                соседними элементами равны,&#xA;                                а отступы между элементами и&#xA;                                краями контейнера отсутствуют.&#xA;                            &lt;/li&gt;&#xA;                            &lt;li&gt;&#xA;                                &#39;space-around&#39; — это значение,&#xA;                                при котором расстояния между&#xA;                                соседними элементами равны,&#xA;                                а отступы между элементами и&#xA;                                краями контейнера составляют половину&#xA;                                расстояния между соседними элементами.&#xA;                            &lt;/li&gt;&#xA;                            &lt;li&gt;&#xA;                                &#39;space-evenly&#39; — это значение,&#xA;                                при котором расстояния&#xA;                                между всеми элементами,&#xA;                                включая края контейнера, равны.&#xA;                            &lt;/li&gt;&#xA;                        &lt;/ul&gt;&#xA;                        &lt;p&gt;&#xA;                            Свойство &#39;justify-content&#39; контролирует&#xA;                            распределение элементов вдоль главной оси и&#xA;                            принимает пять различных значений:&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство flex-wrap </title>
      <link>http://localhost:1313/svoistvo_flex_wrap/</link>
      <pubDate>Wed, 13 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/svoistvo_flex_wrap/</guid>
      <description>&lt;p&gt;Лекция из HTML Academy про свойство flex-wrap в CSS&lt;/p&gt;&#xA;            &lt;p&gt;&#xA;              Если флекс-элементов в контейнере станет больше чем он сможет вместить то произойдет&#xA;              следющее:&#xA;            &lt;/p&gt;&#xA;            &lt;ul&gt;&#xA;              &lt;li&gt;&#xA;                &lt;p&gt;Элементы будут сжиматься до самого возможного минимального значения&lt;/p&gt;&#xA;              &lt;/li&gt;&#xA;              &lt;li&gt;&#xA;                &lt;p&gt;&#xA;                  Даже если указать явную величину ширины для элементов, механизм flexbox может их&#xA;                  уменьшить&#xA;                &lt;/p&gt;&#xA;              &lt;/li&gt;&#xA;              &lt;li&gt;&#xA;                &lt;p&gt;&#xA;                  Если элементы не умещаются в контейнер даже после уменьшения, они выйдут за его&#xA;                  границы, но останутся в одном ряду.&#xA;                &lt;/p&gt;&#xA;              &lt;/li&gt;&#xA;            &lt;/ul&gt;&#xA;            &lt;p&gt;Это поведение можно изменить с помощью свойства flex-wrap у флекс-контейнера.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Боксовая модель в CSS</title>
      <link>http://localhost:1313/boxmodul_v_css/</link>
      <pubDate>Mon, 11 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/boxmodul_v_css/</guid>
      <description>&lt;p&gt;Лекция в HTMLAcademy про боксовую модель документа в CSS&lt;/p&gt;&#xA;&lt;p&gt;Каждому элементу на веб-странице соответствует прямоугольная область, известная как&#xA;бокс (от английского &amp;ldquo;box&amp;rdquo; — «коробка»).&lt;/p&gt;&#xA;&lt;p&gt;Бокс включает в себя:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;1 Содержимое (content) — непосредственно контент элемента;&lt;/li&gt;&#xA;&lt;li&gt;2 Внутренние отступы (padding) — пространство между содержимым и рамкой;&lt;/li&gt;&#xA;&lt;li&gt;3 Рамка (border) — линия, окружающая содержимое и внутренние отступы;&lt;/li&gt;&#xA;&lt;li&gt;4 Внешние отступы (margin) — пространство за пределами рамки, отделяющее данный&#xA;элемент от других.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../images/box-model.png&#34; alt=&#34;Боксовая модель в CSS&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Поперечная ось flexbox</title>
      <link>http://localhost:1313/axis_flexbox/</link>
      <pubDate>Sun, 03 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/axis_flexbox/</guid>
      <description>&lt;p&gt;Лекция из HTML Academy про поперечную ось flexbox в CSS&lt;/p&gt;&#xA;&lt;p&gt;Во флексбоксе вместо направлений «верх» и «низ» используется понятие «поперечная ось».&lt;/p&gt;&#xA;&lt;p&gt;Вдоль этой оси происходит «вертикальное» выравнивание элементов.&lt;/p&gt;&#xA;&lt;p&gt;Пример на картинке:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../images/axis-flexbox.png&#34; alt=&#34;Поперечная ось flexbox&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Поперечная ось всегда перпендикулярна главной оси и поворачивается вместе с ней если:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;1 Главная ось направлена горизонтально, то поперечная ось смотрит вниз.&lt;/li&gt;&#xA;&lt;li&gt;2 Главная ось направлена вертикально, то поперечная ось смотрит направо.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Это поведение может показаться не совсем интуитивным, и к нему нужно привыкнуть.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Свойство flex-direction</title>
      <link>http://localhost:1313/svoistvo_flex_direction_flexbox/</link>
      <pubDate>Sun, 03 Nov 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/svoistvo_flex_direction_flexbox/</guid>
      <description>&lt;p&gt;Лекция из HTML Academy про свойство &#34;flex-direction&#34;&lt;/p&gt;&#xA;            &lt;p&gt;&#xA;              В стандартной блочной модели направления «влево», «вправо», «вверх» и «вниз»&#xA;              фиксированы.&#xA;            &lt;/p&gt;&#xA;            &lt;p&gt;Включаем flex&lt;/p&gt;&#xA;            &lt;pre&gt;&lt;code&gt;display: flex;&lt;/code&gt;&lt;/pre&gt;&#xA;            &lt;p&gt;&#xA;              Однако внутри флекс-контейнера эти понятия могут меняться, так как в нем можно&#xA;              изменить обычное направление потока элементов.&#xA;            &lt;/p&gt;&#xA;            &lt;p&gt;Меняем направление&lt;/p&gt;&#xA;            &lt;pre&gt;&lt;code&gt;flex-direction: row; // Значение по умолчанию   &lt;/code&gt;&lt;/pre&gt;&#xA;            &lt;p&gt;&#xA;              Во флексбоксе вместо направлений «лево» и «право» используется понятие «главная ось».&#xA;              Поток флекс-элементов проходит вдоль главной оси от её начала к её концу.&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Flexbox начало</title>
      <link>http://localhost:1313/flexbox_nachlo/</link>
      <pubDate>Sun, 13 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/flexbox_nachlo/</guid>
      <description>&lt;p&gt;Лекция в HTMLAcademy про flexbox &lt;/p&gt;&#xA;            &lt;p&gt;&#xA;              Чтобы воспользоваться уникальными свойствами флексов (от английского &#34;flexible&#34; —&#xA;              «гибкий»), необходимо сначала с помощью свойства &#39;display&#39; изменить тип элемента:&#xA;            &lt;/p&gt;&#xA;            &lt;pre&gt;&lt;code&gt;display: flex;&lt;/code&gt;&lt;/pre&gt;&#xA;            &lt;p&gt;&#xA;              Контейнер с типом &#39;flex&#39; называется флекс-контейнером, а его дочерние элементы —&#xA;              флекс-элементами.&#xA;            &lt;/p&gt;&#xA;            &lt;p&gt;&#xA;              Флекс-элементы автоматически располагаются вдоль главной оси. По умолчанию, главная&#xA;              ось направлена слева направо.&#xA;            &lt;/p&gt;&#xA;            &lt;img src=&#34;../images/flex1.1.png&#34; /&gt;&#xA;            &lt;p&gt;&#xA;              По умолчанию, флекс-элементы не переносятся на новую строку и сжимаются до размера&#xA;              своего содержимого. Из-за этой особенности, для флекс-элементов, которые используются&#xA;              в сеточной структуре, рекомендуется явно задавать ширину.&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Grid начало</title>
      <link>http://localhost:1313/grid_nachalo/</link>
      <pubDate>Sat, 12 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/grid_nachalo/</guid>
      <description>&lt;p&gt;&#xA;                            Лекция в HTMLAcademy про Grid&#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            Бокс - контейнер, &#xA;                            который относится к типу grid, &#xA;                            содержит дочерние элементы, &#xA;                            называемые грид-элементами. &#xA;                            Несмотря на то что грид-контейнер &#xA;                            выглядит как обычный блочный элемент &#xA;                            для других элементов, таких как основное &#xA;                            содержимое, грид-элементы внутри &#xA;                            него ведут себя по-другому. &#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;Например, даже строчные элементы &#xA;                            начинают занимать всю доступную им область, &#xA;                            а внешние отступы у элементов в грид-контейнере &#xA;                            также ведут себя иначе.&#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            По умолчанию грид-контейнер &#xA;                            является одноколоночным. &#xA;                            Чтобы изменить это, необходимо &#xA;                            описать шаблон грид-контейнера. &#xA;                            Для этого используется &#xA;                            свойство grid-template-columns.&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Margin и Padding в CSS</title>
      <link>http://localhost:1313/margin_and_padding/</link>
      <pubDate>Sat, 12 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/margin_and_padding/</guid>
      <description>&lt;p&gt;Лекция от HTMLAcademy про margin и padding в css&lt;/p&gt;&#xA;            &lt;h3&gt;Свойство padding&lt;/h3&gt;&#xA;            &lt;p&gt;&#xA;              Внутренний отступ — это пространство между содержимым элемента и его границей&#xA;              (рамкой).&#xA;            &lt;/p&gt;&#xA;            &lt;img src=&#34;../images/padding.png&#34; /&gt;&#xA;            &lt;p&gt;&#xA;              Внутренние отступы элемента задаются с использованием свойства padding. Если отступы&#xA;              одинаковы со всех сторон, можно просто указать:&#xA;            &lt;/p&gt;&#xA;            &lt;pre&gt;&lt;code&gt;.main__content {&#xA;  padding: 15px;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;            &lt;p&gt;Такой способ записи называется сокращённым.&lt;/p&gt;&#xA;            &lt;p&gt;&#xA;              Если отступы на разных сторонах отличаются, используют полную запись, где указывают&#xA;              внутренний отступ для каждой стороны отдельно:&#xA;            &lt;/p&gt;&#xA;            &lt;pre&gt;&lt;code&gt;.main__content {&#xA;  padding-top: 5px;&#xA;  padding-right: 10px;&#xA;  padding-bottom: 15px;&#xA;  padding-left: 20px;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;            &lt;p&gt;&#xA;              Свойство padding-top добавляет внутренний отступ сверху, padding-right — справа,&#xA;              padding-bottom — снизу, а padding-left — слева.&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Единицы измерений в CSS</title>
      <link>http://localhost:1313/edinitsi_izmereniy_v_css/</link>
      <pubDate>Tue, 08 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/edinitsi_izmereniy_v_css/</guid>
      <description>&lt;p&gt;&#xA;                            Единицы измерения в CSS &#xA;                            применяются для задания размеров элементов, &#xA;                            расстояний, шрифтов и других свойств. &#xA;                            Они подразделяются на абсолютные &#xA;                            и относительные типы.&#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            Лекция про пять основных единиц измерений: px, em, rem, fr, %.&#xA;                        &lt;/p&gt;&#xA;                        &lt;h3&gt;Пиксели &#39;px&#39;&lt;/h3&gt;&#xA;                        &lt;p&gt;&#xA;                            Пиксель может быть физическим и CSS-пикселем.&#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            Физический пиксель — это отдельная&#xA;                            ячейка на матрице устройства. &#xA;                            Например, если ширина экрана устройства &#xA;                            составляет 480px, это означает, &#xA;                            что по всей ширине расположено &#xA;                            480 неделимых ячеек, где 1px равен &#xA;                            одной такой ячейке.&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Типы значений в CSS</title>
      <link>http://localhost:1313/tipy_snacheniy_v_css/</link>
      <pubDate>Tue, 08 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/tipy_snacheniy_v_css/</guid>
      <description>&lt;h3&gt;Абсолютные значения&lt;/h3&gt;&#xA;                        &lt;p&gt;&#xA;                            Простейший тип значений — это абсолютные величины, &#xA;                            например, пиксели. Они используются для &#xA;                            определения размеров элементов, &#xA;                            текста и других параметров.&#xA;                        &lt;/p&gt;&#xA;                        &lt;pre&gt;&lt;code&gt;width: 1000px;&#xA;font-size: 16px;&lt;/code&gt;&lt;/pre&gt;&#xA;                    &lt;p&gt;&#xA;                        Абсолютные значения обладают &#xA;                        преимуществом в том, что они &#xA;                        представляют собой конечные, понятные и &#xA;                        легко воспринимаемые величины.&#xA;                    &lt;/p&gt;&#xA;                    &lt;h3&gt;Относительные значения&lt;/h3&gt;&#xA;                    &lt;p&gt;&#xA;                        Величину относительных зачений сразу и не &#xA;                        представишь, сначала нужно узнать предидущее &#xA;                        значение потом перемножить его &#xA;                        и уже после этого идет вывод. &#xA;                    &lt;/p&gt;&#xA;                    &lt;p&gt;&#xA;                        Относительные значения, &#xA;                        в отличие от абсолютных, &#xA;                        представляют собой более сложный тип, &#xA;                        поскольку они не являются &#xA;                        конечными или фиксированными, &#xA;                        а зависят от других величин. &#xA;                    &lt;/p&gt;</description>
    </item>
    <item>
      <title>Вложенность селекторов в CSS</title>
      <link>http://localhost:1313/vlojennost_selectorov_v_css/</link>
      <pubDate>Sun, 06 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/vlojennost_selectorov_v_css/</guid>
      <description>&lt;h3&gt;Вложенный или контекстный селектор в CSS&lt;/h3&gt;&#xA;                        &lt;p&gt;&#xA;                            Тип обращений который представляет &#xA;                            собой комбинацию двух селекторов, &#xA;                            разделенных пробелом. &#xA;                            Такие селекторы известны как &#xA;                            вложенные или контекстные и интерпретируются &#xA;                            справа налево. &#xA;                            Важно отметить, что эти ссылки могут &#xA;                            находиться как непосредственно внутри &#xA;                            тегов с указанным классом, так и внутри вложенных &#xA;                            тегов на любом уровне глубины.&#xA;                        &lt;/p&gt;&#xA;                        &lt;pre&gt;&lt;code&gt;.nav__list a { &amp;lsaquo; Обращение к тегу a внутри класса .nav__list    &#xA;  font-size: 16px;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;                        &lt;p&gt;&#xA;                            С помощью пробела можно комбинировать &#xA;                            любые типы селекторов. &#xA;                            В данном примере селектор выбирает &#xA;                            все элементы с классом &#34;warning&#34;, &#xA;                            которые находятся внутри элементов с классом &#34;text&#34;.&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Селекторы в CSS</title>
      <link>http://localhost:1313/selectory_v_css/</link>
      <pubDate>Thu, 03 Oct 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/selectory_v_css/</guid>
      <description>&lt;p&gt;&#xA;                            Лекция про селекторы, классы, id и  &#xA;                            вложенность CSS правил в HTML Academy. &#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            CSS — это язык, который используется &#xA;                            для оформления HTML-документов. &#xA;                            Его синтаксис значительно проще, &#xA;                            чем у HTML, так как в CSS отсутствуют &#xA;                            сложные правила, связанные с вложенностью элементов. &#xA;                            Фактически, CSS — это довольно &#34;плоский&#34; язык, &#xA;                            где вложенность практически не используется. &#xA;                            Типичный CSS-файл состоит из последовательности CSS-правил. &#xA;                            Каждое CSS-правило включает в себя селектор и список &#xA;                            свойств с соответствующими значениями. &#xA;                            Вот пример простого CSS-правила:&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Фон в CSS 2</title>
      <link>http://localhost:1313/background_v_css_2/</link>
      <pubDate>Mon, 30 Sep 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/background_v_css_2/</guid>
      <description>&lt;h2&gt;Форматы изображений&lt;/h2&gt;&#xA;                        &lt;h3&gt;Формат JPEG&lt;/h3&gt;&#xA;                        &lt;p&gt;&#xA;                            Формат JPEG отлично справляется с изображениями &#xA;                            фотографий и картин, но не очень подходит для схем, &#xA;                            чертежей, текста и графики.&#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            При сохранении изображения в формате JPEG можно &#xA;                            регулировать уровень качества. &#xA;                            Если выбрать слишком низкий уровень, &#xA;                            могут появиться артефакты.&#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            JPEG не поддерживает прозрачность, поэтому изображение &#xA;                            всегда будет прямоугольным. &#xA;                            Чтобы имитировать прозрачность, &#xA;                            можно в графическом редакторе установить &#xA;                            фон изображения таким же, как у контейнера, &#xA;                            в котором оно размещено.&#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            Используйте JPEG для размещения фотографий &#xA;                            с оптимальным балансом между размером файла &#xA;                            и качеством изображения.&#xA;                        &lt;/p&gt;</description>
    </item>
    <item>
      <title>Фон в CSS 1</title>
      <link>http://localhost:1313/background_v_css_1/</link>
      <pubDate>Sun, 29 Sep 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/background_v_css_1/</guid>
      <description>&lt;p&gt;&#xA;              Фоновый цвет элемента в CSS устанавливается с использованием свойства&#xA;              background-color.&#xA;            &lt;/p&gt;&#xA;            &lt;p&gt;&#xA;              В CSS доступны различные способы определения цветов: шестнадцатеричный код (HEX), RGB&#xA;              или RGBA форматы, а также использование предопределенных цветовых названий, таких как&#xA;              red или green.&#xA;            &lt;/p&gt;&#xA;            &lt;pre&gt;&lt;code&gt;body__main {&#xA;  background-color: #ff0000;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;            &lt;h2&gt;Свойство background-image&lt;/h2&gt;&#xA;            &lt;p&gt;&#xA;              Фоновое изображение можно установить с помощью CSS-свойства background-image. Для&#xA;              этого используется следующий синтаксис:&#xA;            &lt;/p&gt;&#xA;            &lt;pre&gt;&lt;code&gt;body__main {&#xA;  background-image: url(&#34;адрес-картинки&#34;);    &#xA;}&lt;/code&gt;&lt;/pre&gt;&#xA;            &lt;p&gt;&#xA;              Адрес изображения должен быть указан внутри функции url(&#34;...&#34;). Адреса фоновых&#xA;              изображений аналогичны адресам обычных изображений. К элементу можно одновременно&#xA;              применить и цвет фона, и фоновое изображение. В таком случае изображение будет&#xA;              отображаться поверх фонового цвета.&#xA;            &lt;/p&gt;</description>
    </item>
    <item>
      <title>Оформление текста в CSS</title>
      <link>http://localhost:1313/oformlenie_texta_v_css/</link>
      <pubDate>Sat, 29 Jun 2024 18:53:24 +0300</pubDate>
      <guid>http://localhost:1313/oformlenie_texta_v_css/</guid>
      <description>&lt;p&gt; Оформление текста с помощью CSS. Задание размера шрифтов, &#xA;                            высоты строки, выравнивание, задание цвета и отступы текста. &lt;/p&gt;&#xA;                        &lt;h2&gt; Свойство font-size  &lt;/h2&gt;&#xA;                        &lt;p&gt;&#xA;                            font-size и размер шрифтов. &#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            Наиболее важный параметр текста, которым можно управлять, — это шрифт. &#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            Выбор конкретного шрифта, его размера, начертания и насыщенности — &#xA;                            все эти свойства мы рассмотрим последовательно. Размер шрифта регулируется свойством font-size, &#xA;                            значение которого определяет желаемую высоту символа шрифта.&#xA;                        &lt;/p&gt;&#xA;                        &lt;p&gt;&#xA;                            Единицы измерения могут &#xA;                            быть как абсолютными, так и относительными. &#xA;                            Наиболее распространенной единицей измерения размера шрифта являются пиксели (px):&#xA;                        &lt;/p&gt;</description>
    </item>
  </channel>
</rss>
